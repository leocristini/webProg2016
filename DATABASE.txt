CREATE TABLE USERS (

ID INTEGER NOT NULL,

FIRSTNAME VARCHAR(255) NOT NULL,

LASTNAME VARCHAR(255) NOT NULL,

USERNAME VARCHAR(25) NOT NULL UNIQUE,

USER_TYPE VARCHAR(5) DEFAULT 'A',

PASSWORD VARCHAR(255) NOT NULL,

PRIMARY KEY (ID),

UNIQUE (USERNAME),

UNIQUE (EMAIL)

);

CREATE TABLE PRICE_RANGES (

ID INTEGER NOT NULL,

NAME VARCHAR(25) NOT NULL,

MIN_VALUE FLOAT,

MAX_VALUE FLOAT,

PRIMARY KEY (ID),

UNIQUE (NAME),

CONSTRAINT PRICE_RANGE_CHECK CHECK ((MIN_VALUE IS NULL AND MAX_VALUE IS NOT

NULL) OR (MIN_VALUE IS

NOT NULL AND MAX_VALUE IS NULL) OR (MIN_VALUE < MAX_VALUE))

);

CREATE TABLE RESTAURANTS (

ID INTEGER NOT NULL ,

NAME VARCHAR(255) NOT NULL,

DESCRIPTION VARCHAR(32000),

WEB_SITE_URL VARCHAR(255),

GLOBAL_VALUE INTEGER CONSTRAINT GLOBAL_VALUE_CHECK CHECK (GLOBAL_VALUE

>= 0 AND

GLOBAL_VALUE <= 5),

ID_OWNER INTEGER ,

ID_CREATOR INTEGER NOT NULL,

ID_PRICE_RANGE INTEGER ,

PRIMARY KEY (ID),

FOREIGN KEY (ID_OWNER) REFERENCES USERS (ID),

FOREIGN KEY (ID_CREATOR) REFERENCES USERS (ID),

FOREIGN KEY (ID_PRICE_RANGE) REFERENCES PRICE_RANGES (ID)

);

CREATE TABLE PHOTOS (

ID INTEGER NOT NULL ,

NAME VARCHAR(25) NOT NULL,

DESCRIPTION VARCHAR (32000),

PATH VARCHAR(255) NOT NULL,

ID_RESTAURANT INTEGER NOT NULL,

ID_OWNER INTEGER NOT NULL,

PRIMARY KEY (ID),

FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID),

FOREIGN KEY (ID_OWNER) REFERENCES USERS (ID)

);

CREATE TABLE COORDINATES (

ID INTEGER NOT NULL ,

LATITUDE FLOAT NOT NULL,

LONGITUDE FLOAT NOT NULL,

ADDRESS VARCHAR(255) NOT NULL,

PRIMARY KEY (ID)

);

CREATE TABLE RESTAURANT_COORDINATE (

ID_RESTAURANT INTEGER NOT NULL,

ID_COORDINATE INTEGER NOT NULL,

PRIMARY KEY (ID_RESTAURANT, ID_COORDINATE),

FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID),

FOREIGN KEY (ID_COORDINATE) REFERENCES COORDINATES (ID)

);

CREATE TABLE OPENING_HOURS_RANGES (

ID INTEGER NOT NULL ,

DAY_OF_THE_WEEK INTEGER CONSTRAINT DAY_OF_THE_WEEK_CHECK CHECK

(DAY_OF_THE_WEEK >= 1 AND

DAY_OF_THE_WEEK <= 7),

START_HOUR TIME NOT NULL,

END_HOUR TIME NOT NULL,

PRIMARY KEY (ID),

CONSTRAINT RANGE_CHECK CHECK (START_HOUR < END_HOUR)

);

CREATE TABLE OPENING_HOURS_RANGE_RESTAURANT (

ID_RESTAURANT INTEGER NOT NULL,

ID_OPENING_HOURS_RANGE INTEGER NOT NULL,

PRIMARY KEY (ID_RESTAURANT, ID_OPENING_HOURS_RANGE),

FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID),

FOREIGN KEY (ID_OPENING_HOURS_RANGE) REFERENCES OPENING_HOURS_RANGES (ID)

);

CREATE TABLE CUISINES (

ID INTEGER NOT NULL,

NAME VARCHAR(25) NOT NULL,

PRIMARY KEY (ID)

);

CREATE TABLE RESTAURANT_CUISINE (

ID_RESTAURANT INTEGER NOT NULL,

ID_CUISINE INTEGER NOT NULL,

PRIMARY KEY (ID_RESTAURANT, ID_CUISINE),

FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID),

FOREIGN KEY (ID_CUISINE) REFERENCES CUISINES (ID)

);

CREATE TABLE REVIEWS (

ID INTEGER NOT NULL,

GLOBAL_VALUE INTEGER NOT NULL CONSTRAINT REVIEW_GLOBAL_VALUE_CHECK CHECK

(GLOBAL_VALUE >= 1

AND GLOBAL_VALUE <= 5),

FOOD INTEGER CONSTRAINT REVIEW_FOOD_CHECK CHECK (FOOD IS NULL OR (FOOD

>= 1 AND FOOD <=

5)),

SERVICE INTEGER CONSTRAINT REVIEW_SERVICE_CHECK CHECK (SERVICE IS NULL

OR (SERVICE >= 1 AND

SERVICE <= 5)),

VALUE_FOR_MONEY INTEGER CONSTRAINT REVIEW_VALUE_FOR_MONEY_CHECK CHECK

(VALUE_FOR_MONEY IS

NULL OR (VALUE_FOR_MONEY >= 1 AND VALUE_FOR_MONEY <= 5)),

ATMOSPHERE INTEGER CONSTRAINT REVIEW_ATMOSPHERE_CHECK CHECK (ATMOSPHERE

IS NULL OR

(ATMOSPHERE >= 1 AND ATMOSPHERE <= 5)),

NAME VARCHAR(25),

DESCRIPTION VARCHAR(32000),

DATE_CREATION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

ID_RESTAURANT INTEGER NOT NULL,

ID_CREATOR INTEGER NOT NULL,

ID_PHOTO INTEGER ,

PRIMARY KEY (ID),

FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID),

FOREIGN KEY (ID_CREATOR) REFERENCES USERS (ID),

FOREIGN KEY (ID_PHOTO) REFERENCES PHOTOS (ID)

);

CREATE TABLE REPLIES (

ID INTEGER NOT NULL ,

DESCRIPTION VARCHAR(32000) NOT NULL,

DATE_CREATION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

ID_REVIEW INTEGER NOT NULL,

ID_OWNER INTEGER NOT NULL,

DATE_VALIDATION TIMESTAMP,

ID_VALIDATOR INTEGER,

PRIMARY KEY (ID),

FOREIGN KEY (ID_REVIEW) REFERENCES REVIEWS (ID),

FOREIGN KEY (ID_OWNER) REFERENCES USERS (ID),

FOREIGN KEY (ID_VALIDATOR) REFERENCES USERS (ID)

);

CREATE TABLE USER_REVIEW_LIKES (

ID_USER INTEGER NOT NULL,

ID_REVIEW INTEGER NOT NULL,

ID_CREATOR INTEGER NOT NULL,

LIKE_TYPE INTEGER NOT NULL CONSTRAINT LIKE_TYPE_CHECK CHECK (LIKE_TYPE

>= 0 AND LIKE_TYPE

<= 1),

DATE_CREATION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

PRIMARY KEY (ID_USER, ID_REVIEW, ID_CREATOR),

FOREIGN KEY (ID_USER) REFERENCES USERS (ID),

FOREIGN KEY (ID_REVIEW) REFERENCES REVIEWS (ID),

FOREIGN KEY (ID_CREATOR) REFERENCES USERS (ID)

);

INSERT INTO USERS(ID, FIRSTNAME, LASTNAME, USERNAME, USER_TYPE, PASSWORD)
VALUES (1,'Gianmaria', 'Moro', 'gianmaria.moro@studenti.unitn.it' ,'M', 'ciao1'),
(2,'Leonardo', 'Cristini', 'leonardo.cristini@studenti.unitn.it','M',  'ciao2'),
(3,'Mario', 'Rossi', 'mario.rossi@hotmail.it','U',  'ciao3'),
(4,'Luca', 'Panarozzolo', 'pizzanapoli@hotmail.it', 'R', 'ciao4'),
(5,'Wu', 'Tang', 'cineseparty@hotmail.it','R',  'ciao5');

INSERT INTO CUISINES(ID, NAME)
VALUES(1 ,'Pizzeria'),
(2,'Kebab'),
(3,'Indiano'),
(4,'Cinese'),
(5,'Giapponese'),
(6,'Vietnamita');

INSERT INTO PRICE_RANGES(id,name, min_value, max_value)
VALUES (1,'Pizza Diavola', 4, 5),
(2,'Kebab', 3,5),
(3,'Sushi', 2,10),
(4,'Pasta alla puttanesca', 4,7);

INSERT INTO COORDINATES
VALUES(1, 46.06941967, 11.12015963, 'Via Roma 3'),
(2, 46.06657618, 11.11823916, 'Via Giuseppe Verdi 10'),
(3, 46.06483428, 11.12334609, 'Via S.Croce 8');

INSERT INTO RESTAURANTS
VALUES(1, 'Bella Napoli', 'Pizza napoletana di qualità con cottura a legna', 'www.pizzanapoli.it', 4,4,4,1),
(2, 'Cinese Party', 'Cucina cinese cucinata da un vero chef cinese qualificato alla scuola più difficile di Pechino', 'www.cineseparty.com', 3,5,5,3);

INSERT INTO OPENING_HOURS_RANGES
VALUES(1, 3, '9:00:00', '23:30:00'),
(2, 7, '10:00:00', '23:59:00'),
(3, 4, '7:00:00', '22:30:00'),
(4, 3, '1:00:00', '6:30:00');

INSERT INTO OPENING_HOURS_RANGE_RESTAURANT
VALUES(1,1),
(2,2);

INSERT INTO PHOTOS
VALUES(1,'Pizza diavola', 'Pizza col salamino in stile napoletano', 'C:LAFOTO',1,4);

INSERT INTO REVIEWS
VALUES(1,1,1,3,1,4,'Eddy', 'LA TUA PIZZA FA CAGARE', '2016-05-23 17:03:25',1,4,1);

INSERT INTO RESTAURANT_CUISINE
VALUES(1,1),
(2,3);


INSERT INTO REPLIES
VALUES(1, 'LA TUA PIZZA FA CAGARISSIMO, NON CAGARE', '2016-05-23 21:15:25',1,4,'2016-05-23 21:35:45',1);

INSERT INTO RESTAURANT_COORDINATE
VALUES(1,1),
(2,2);

INSERT INTO USER_REVIEW_LIKES
VALUES(1,1,3,1);
